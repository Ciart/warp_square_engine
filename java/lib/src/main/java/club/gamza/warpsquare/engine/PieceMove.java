// Automatically generated by flapigen
package club.gamza.warpsquare.engine;


public final class PieceMove {

    public PieceMove(Square source, Square destination, PieceType promotion) {
        long a0 = source.mNativeObj;
        source.mNativeObj = 0;

        long a1 = destination.mNativeObj;
        destination.mNativeObj = 0;

        int a2 = (promotion != null) ? promotion.getValue() : -1;

        mNativeObj = init(a0, a1, a2);
        JNIReachabilityFence.reachabilityFence3(source, destination, promotion);
    }
    private static native long init(long source, long destination, int promotion);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ PieceMove(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;

    static {
        try {
            NativeUtils.loadLibraryFromJar();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
    }
}